<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WFw.Utils</name>
    </assembly>
    <members>
        <member name="T:WFw.Utils.Dtos.IVerifyCode">
            <summary>
            验证码
            </summary>
        </member>
        <member name="P:WFw.Utils.Dtos.IVerifyCode.Phone">
            <summary>
            手机号
            </summary>
        </member>
        <member name="P:WFw.Utils.Dtos.IVerifyCode.VerifyCode">
            <summary>
            验证码
            </summary>
        </member>
        <member name="T:WFw.Utils.AutoExtensions">
            <summary>
            自动化
            </summary>
        </member>
        <member name="M:WFw.Utils.AutoExtensions.MapTo``1(System.Object)">
            <summary>
            反射映射
            </summary>
            <typeparam name="TTarget"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:WFw.Utils.AutoExtensions.MapTo``2(``0,``1)">
            <summary>
            填充类
            </summary>
            <typeparam name="TTarget"></typeparam>
            <typeparam name="TSource"></typeparam>
            <param name="target"></param>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:WFw.Utils.AutoExtensions.Filling``2(``0,``1)">
            <summary>
            填充类
            </summary>
            <typeparam name="TTarget"></typeparam>
            <typeparam name="TSource"></typeparam>
            <param name="target"></param>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:WFw.Utils.AutoExtensions.Filling``1(``0,System.String,System.Char[])">
            <summary>
            填充类
            </summary>
            <typeparam name="TTarget"></typeparam>
            <param name="target"></param>
            <param name="source"></param>
            <param name="separators"></param>
            <returns></returns>
        </member>
        <member name="M:WFw.Utils.AutoExtensions.Filling``1(``0,System.String,System.Char,System.Char,System.Char)">
            <summary>
            反射填充类
            </summary>
            <typeparam name="TTarget">目标类</typeparam>
            <param name="target">目标类</param>
            <param name="source">数据</param>
            <param name="separators">数据端拆分字符</param>
            <param name="dataseparators">数据拆分</param>
            <param name="trimchar">数据字段待移除前后缀</param>
            <returns></returns>
        </member>
        <member name="M:WFw.Utils.AutoExtensions.HasNull``1(``0)">
            <summary>
            包含null值
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:WFw.Utils.AutoExtensions.HasNullOrWhiteSpace``1(``0,System.String@)">
            <summary>
            包含控制
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:WFw.Utils.AutoExtensions.EqualsWith``1(``0,``0)">
            <summary>
            比较两个类内部值是否相同
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t">目标类</param>
            <param name="other">对比类</param>
            <returns></returns>
        </member>
        <member name="T:WFw.Utils.FormatExtensions">
            <summary>
            格式化
            </summary>
        </member>
        <member name="M:WFw.Utils.FormatExtensions.FormatFileSize(System.Double)">
            <summary>
            转化为文件大小，取整
            </summary>
            <param name="size">文件大小</param>
            <returns></returns>
        </member>
        <member name="T:WFw.Utils.RandomExtensions">
            <summary>
            随机数<see cref="T:System.Random"/>类型的扩展辅助操作类
            </summary>
        </member>
        <member name="M:WFw.Utils.RandomExtensions.NextBoolean(System.Random)">
            <summary>
            返回随机布尔值
            </summary>
            <param name="random"></param>
            <returns>随机布尔值</returns>
        </member>
        <member name="M:WFw.Utils.RandomExtensions.NextEnum``1(System.Random)">
            <summary>
            返回指定枚举类型的随机枚举值
            </summary>
            <param name="random"></param>
            <returns>指定枚举类型的随机枚举值</returns>
        </member>
        <member name="M:WFw.Utils.RandomExtensions.NextBytes(System.Random,System.Int32)">
            <summary>
            返回随机数填充的指定长度的数组
            </summary>
            <param name="random"></param>
            <param name="length">数组长度</param>
            <returns>随机数填充的指定长度的数组</returns>
        </member>
        <member name="M:WFw.Utils.RandomExtensions.NextItem``1(System.Random,``0[])">
            <summary>
            返回数组中的随机元素
            </summary>
            <typeparam name="T">元素类型</typeparam>
            <param name="random"></param>
            <param name="items">元素数组</param>
            <returns>元素数组中的某个随机项</returns>
        </member>
        <member name="M:WFw.Utils.RandomExtensions.NextDateTime(System.Random,System.DateTime,System.DateTime)">
            <summary>
            返回指定时间段内的随机时间值
            </summary>
            <param name="random"></param>
            <param name="minValue">时间范围的最小值</param>
            <param name="maxValue">时间范围的最大值</param>
            <returns>指定时间段内的随机时间值</returns>
        </member>
        <member name="M:WFw.Utils.RandomExtensions.NextDateTime(System.Random)">
            <summary>
            返回随机时间值
            </summary>
            <param name="random"></param>
            <returns>随机时间值</returns>
        </member>
        <member name="M:WFw.Utils.RandomExtensions.NextNumberString(System.Random,System.Int32)">
            <summary>
            获取指定的长度的随机数字字符串
            </summary>
            <param name="random"></param>
            <param name="length">要获取随机数长度</param>
            <returns>指定长度的随机数字符串</returns>
        </member>
        <member name="M:WFw.Utils.RandomExtensions.NextLetterString(System.Random,System.Int32)">
            <summary>
            获取指定的长度的随机字母字符串
            </summary>
            <param name="random"></param>
            <param name="length">要获取随机数长度</param>
            <returns>指定长度的随机字母组成字符串</returns>
        </member>
        <member name="M:WFw.Utils.RandomExtensions.NextLetterAndNumberString(System.Random,System.Int32)">
            <summary>
            获取指定的长度的随机字母和数字字符串
            </summary>
            <param name="random"></param>
            <param name="length">要获取随机数长度</param>
            <returns>指定长度的随机字母和数字组成字符串</returns>
        </member>
        <member name="M:WFw.Utils.RandomExtensions.NextSurName(System.Random)">
            <summary>
            获取随机的姓名
            </summary>
        </member>
        <member name="M:WFw.Utils.RandomExtensions.NextNationName(System.Random)">
            <summary>
            获取随机的民族
            </summary>
        </member>
        <member name="M:WFw.Utils.RandomExtensions.NextPhoneNumber(System.Random,System.String[])">
            <summary>
            获取随机手机号
            </summary>
            <param name="random"></param>
            <param name="sections">指定手机号段，号段字符串必须是7位数值</param>
            <returns></returns>
        </member>
        <member name="M:WFw.Utils.RandomExtensions.NextIdentityCardId(System.Random,System.String[])">
            <summary>
            获取随机身份证号
            </summary>
            <param name="random"></param>
            <param name="areaCodes">指定的地区码</param>
            <returns></returns>
        </member>
        <member name="M:WFw.Utils.RandomExtensions.NextItems``1(System.Random,``0[],System.Int32,``0[])">
            <summary>
            从指定源集合中获取排除指定元素的指定个数的随机项集合
            </summary>
            <typeparam name="T">项类型</typeparam>
            <param name="random"></param>
            <param name="source">源集合</param>
            <param name="count">要获取的子集合的项数量</param>
            <param name="excepts">要排除的项集合</param>
            <returns></returns>
        </member>
        <member name="M:WFw.Utils.RandomExtensions.NextItems(System.Random,System.Int32,System.Int32,System.Int32,System.Int32[])">
            <summary>
            从指定数值范围中获取排除指定数值外的指定个数随机数值集合
            </summary>
            <param name="random"></param>
            <param name="min">数值范围小值</param>
            <param name="max">数值范围大值</param>
            <param name="count">要获取的子集合元素数量</param>
            <param name="excepts">要排除的数值</param>
            <returns></returns>
        </member>
        <member name="T:WFw.Utils.StringExtensions">
            <summary>
            扩展
            </summary>
        </member>
        <member name="M:WFw.Utils.StringExtensions.EqualIgnoreCase(System.String,System.String[])">
            <summary>忽略大小写的字符串相等比较，判断是否与任意一个待比较字符串相等</summary>
            <param name="value">字符串</param>
            <param name="strs">待比较字符串数组</param>
            <returns></returns>
        </member>
        <member name="M:WFw.Utils.StringExtensions.StartsWithIgnoreCase(System.String,System.String[])">
            <summary>忽略大小写的字符串开始比较，判断是否与任意一个待比较字符串开始</summary>
            <param name="value">字符串</param>
            <param name="strs">待比较字符串数组</param>
            <returns></returns>
        </member>
        <member name="M:WFw.Utils.StringExtensions.EndsWithIgnoreCase(System.String,System.String[])">
            <summary>忽略大小写的字符串结束比较，判断是否以任意一个待比较字符串结束</summary>
            <param name="value">字符串</param>
            <param name="strs">待比较字符串数组</param>
            <returns></returns>
        </member>
        <member name="T:WFw.Utils.TimeStampExtenisons">
            <summary>
            时间戳
            </summary>
        </member>
        <member name="M:WFw.Utils.TimeStampExtenisons.ToFormatTimeStamp(System.DateTime)">
            <summary>
            年月日时分秒转时间戳
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:WFw.Utils.TimeStampExtenisons.FromFormatTimeStamp(System.Int64)">
            <summary>
            年月日时分秒时间戳转本地时间
            </summary>
            <param name="timeStamp"></param>
            <returns></returns>
        </member>
        <member name="M:WFw.Utils.TimeStampExtenisons.ToSecondeTimeStamp(System.DateTime)">
            <summary>
            时间戳(秒)
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:WFw.Utils.TimeStampExtenisons.FromSecondeTimeStamp(System.Int64)">
            <summary>
            时间戳转本地时间
            </summary>
            <param name="timeStamp"></param>
            <returns></returns>
        </member>
        <member name="M:WFw.Utils.TimeStampExtenisons.ToUtcSecondeTimeStamp(System.DateTimeOffset)">
            <summary>
            UTC时间戳(秒)
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:WFw.Utils.TimeStampExtenisons.FromUtcSecondeTimeStamp(System.Int64)">
            <summary>
            UTC时间戳转UTC时间(秒)
            </summary>
            <param name="timeStamp"></param>
            <returns></returns>
        </member>
        <member name="M:WFw.Utils.TimeStampExtenisons.ToUtcMillisecondsTimeStamp(System.DateTimeOffset)">
            <summary>
            UTC时间戳(毫秒)
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:WFw.Utils.TimeStampExtenisons.FromUtcMillisecondsTimeStamp(System.Int64)">
            <summary>
            UTC时间戳转UTC时间(毫秒)
            </summary>
            <param name="timeStamp"></param>
            <returns></returns>
        </member>
        <member name="M:WFw.Utils.TimeStampExtenisons.ToUtcTicksTimeStamp(System.DateTimeOffset)">
            <summary>
            UTC时间戳(tick)
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:WFw.Utils.TimeStampExtenisons.FromUtcTicksTimeStamp(System.Int64)">
            <summary>
            UTC时间戳转UTC时间(ticks)
            </summary>
            <param name="timeStamp"></param>
            <returns></returns>
        </member>
        <member name="T:WFw.Utils.ValidateExtenisons">
            <summary>
            验证
            </summary>
        </member>
        <member name="M:WFw.Utils.ValidateExtenisons.IsIp(System.String)">
            <summary>
            是否是ip地址
            </summary>
            <param name="strIp"></param>
            <returns></returns>
        </member>
        <member name="M:WFw.Utils.ValidateExtenisons.IsPort(System.String)">
            <summary>
            是否是端口号
            </summary>
            <param name="strPort"></param>
            <returns></returns>
        </member>
        <member name="M:WFw.Utils.ValidateExtenisons.IsEmail(System.String)">
            <summary>
            是否是邮箱
            </summary>
            <param name="strEmail"></param>
            <returns></returns>
        </member>
        <member name="M:WFw.Utils.ValidateExtenisons.IsNum(System.String)">
            <summary>
            是否是数字
            </summary>
            <param name="strNum"></param>
            <returns></returns>
        </member>
        <member name="M:WFw.Utils.ValidateExtenisons.IsChineseCharacter(System.String)">
            <summary>
            是否是中文
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:WFw.Utils.ValidateExtenisons.IsImage(System.String)">
            <summary>
            是否是图片文件名
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="T:WFw.Utils.Mapper.ExpressionGenericMapper`2">
            <summary>
            
            </summary>
            <typeparam name="TIn"></typeparam>
            <typeparam name="TOut"></typeparam>
        </member>
        <member name="M:WFw.Utils.Mapper.ExpressionGenericMapper`2.Trans(`0)">
            <summary>
            
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:WFw.Utils.Mapper.ExpressionGenericMapper`2.GetFunc">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:WFw.Utils.EncryptProvider">
            <summary>
            加密
            </summary>
        </member>
        <member name="M:WFw.Utils.EncryptProvider.GetMd5Password(System.String)">
            <summary>
            MD5密码加密
            md5+加盐+md5
            </summary>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:WFw.Utils.EncryptProvider.GetMd5Password(System.String,System.String)">
            <summary>
            MD5密码加密
            md5+加盐+md5
            </summary>
            <param name="salt"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:WFw.Utils.EncryptProvider.GetMd5(System.String,System.Boolean)">
            <summary>
            md5加密
            </summary>
            <param name="source"></param>
            <param name="isLower"></param>
            <returns></returns>
        </member>
        <member name="T:WFw.Utils.StringEncryptProvider">
            <summary>
            字符串内容加密,如手机号，姓名
            </summary>
        </member>
        <member name="M:WFw.Utils.StringEncryptProvider.EncrpytPhone(System.String)">
            <summary>
            加密手机号
            </summary>
            <param name="phone"></param>
            <returns></returns>
        </member>
        <member name="M:WFw.Utils.StringEncryptProvider.EncrpytName(System.String)">
            <summary>
            加密姓名
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:WFw.ApplicationBuilderExtensions">
            <summary>
            扩展
            </summary>
        </member>
        <member name="M:WFw.ApplicationBuilderExtensions.UseVerificationCode(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            使用全局错误
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="T:WFw.Middlewares.VerificationCodeMiddleware">
            <summary>
            验证码中间件
            </summary>
        </member>
        <member name="M:WFw.Middlewares.VerificationCodeMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:WFw.Middlewares.VerificationCodeMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext,Microsoft.Extensions.Logging.ILogger{WFw.Middlewares.VerificationCodeMiddleware})">
            <summary>
            执行
            </summary>
            <param name="context"></param>
            <param name="logger"></param>
            <returns></returns>
        </member>
        <member name="M:WFw.Middlewares.VerificationCodeMiddleware.WriteError(Microsoft.AspNetCore.Http.HttpContext,WFw.Results.OperationResultType,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="type"></param>
            <param name="message"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
    </members>
</doc>
